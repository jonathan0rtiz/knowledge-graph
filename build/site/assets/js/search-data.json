[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"http://localhost:8080/notes/403.html","relUrl":"notes/403.html"},{"doc":"Knowledge","title":"Knowledge","hpath":"root","content":"\n","url":"http://localhost:8080/","relUrl":"/"},{"doc":"Books","title":"Books","hpath":"books","content":"\nCurrent reads:\n- [[books.clean-clode]]\n\nWant to read:\n- Clean Architecture\n- \n","url":"http://localhost:8080/notes/5ff9dc2a-eb3c-4a95-953b-ad5e695d28a7.html","relUrl":"notes/5ff9dc2a-eb3c-4a95-953b-ad5e695d28a7.html"},{"doc":"Clean Clode","title":"Clean Clode","hpath":"books.clean-clode","content":"","url":"http://localhost:8080/notes/3536cfb3-28de-482b-9270-b8c8da93ccb8.html","relUrl":"notes/3536cfb3-28de-482b-9270-b8c8da93ccb8.html"},{"doc":"Platform","title":"Platform","hpath":"platform","content":"\n[[platform.android]]\n[[platform.web]]","url":"http://localhost:8080/notes/31dd1ef6-222d-4384-8b77-7ea3003ed8db.html","relUrl":"notes/31dd1ef6-222d-4384-8b77-7ea3003ed8db.html"},{"doc":"Web","title":"Web","hpath":"platform.web","content":"##### Frameworks\n\n[[platform.web.React]]\n\n","url":"http://localhost:8080/notes/eacf3c98-7874-4574-9dd9-8ec5fdd03ca7.html","relUrl":"notes/eacf3c98-7874-4574-9dd9-8ec5fdd03ca7.html"},{"doc":"React","title":"React","hpath":"platform.web.React","content":"\n#### Resources\n**Bootstrap react application**\nhttps://create-react-app.dev/docs/adding-typescript/","url":"http://localhost:8080/notes/9bb37335-75c1-4dfb-b298-15a6805e2472.html","relUrl":"notes/9bb37335-75c1-4dfb-b298-15a6805e2472.html"},{"doc":"Android","title":"Android","hpath":"platform.android","content":"\n","url":"http://localhost:8080/notes/d6fcf368-4072-4ce8-b4bd-934e4fd00747.html","relUrl":"notes/d6fcf368-4072-4ce8-b4bd-934e4fd00747.html"},{"doc":"Recyclerview","title":"Recyclerview","hpath":"platform.android.recyclerview","content":"\n# Recycler View","url":"http://localhost:8080/notes/ae38d043-a7b4-400a-99e5-1b1041bf5032.html","relUrl":"notes/ae38d043-a7b4-400a-99e5-1b1041bf5032.html"},{"doc":"Adapter","title":"Adapter","hpath":"platform.android.adapter","content":"\n## Monthly Sale Report {.tabset}\n\n### By Product\n\n(tab content)\n\n### By Region\n\n(tab content)\nYou can also specify two additional attributes to control the appearance and behavior of the tabs. The .tabset-fade attribute causes the tabs to fade in and out when switching. The .tabset-pills attribute causes the visual appearance of the tabs to be “pill” rather than traditional tabs. For example:\n\n## A/B Testing {.tabset .tabset-fade .tabset-pills}\n\n### Test A\n\n(Test A Content)\n\n### Test B\n\n(Test B Content)","url":"http://localhost:8080/notes/359c6630-a51b-40cc-9d04-0bb617587ecd.html","relUrl":"notes/359c6630-a51b-40cc-9d04-0bb617587ecd.html"},{"doc":"Activities","title":"Activities","hpath":"platform.android.activities","content":"\n# Android Activities","url":"http://localhost:8080/notes/19c1309f-66c0-4adf-b942-8783e4fc8412.html","relUrl":"notes/19c1309f-66c0-4adf-b942-8783e4fc8412.html"},{"doc":"Lang","title":"Lang","hpath":"lang","content":"\n[[lang.kotlin]]\n[[lang.typescript]]\n[[lang.javascript]]","url":"http://localhost:8080/notes/17b00ebf-d705-4247-b2b7-bbcd913f9ec2.html","relUrl":"notes/17b00ebf-d705-4247-b2b7-bbcd913f9ec2.html"},{"doc":"TypeScript","title":"TypeScript","hpath":"lang.typescript","content":"\n[[lang.typescript.functions]]\n[[lang.typescript.flow]]\n\n#### Data structures\n\n[[lang.typescript.data]]","url":"http://localhost:8080/notes/f49555ad-7641-438d-8b10-5fdcff100d7b.html","relUrl":"notes/f49555ad-7641-438d-8b10-5fdcff100d7b.html"},{"doc":"Functions","title":"Functions","hpath":"lang.typescript.functions","content":"\n","url":"http://localhost:8080/notes/57bda740-925e-4ccb-9f86-5d543b9f713f.html","relUrl":"notes/57bda740-925e-4ccb-9f86-5d543b9f713f.html"},{"doc":"Flow","title":"Flow","hpath":"lang.typescript.flow","content":"\n","url":"http://localhost:8080/notes/d3971a13-bfa4-428f-be45-a40e8fda0e7b.html","relUrl":"notes/d3971a13-bfa4-428f-be45-a40e8fda0e7b.html"},{"doc":"Data","title":"Data","hpath":"lang.typescript.data","content":"\n- [[lang.typescript.data.boolean]]\n- [[lang.typescript.data.string]]\n- [[lang.typescript.data.array]]","url":"http://localhost:8080/notes/6f638e63-1ab9-478c-85ee-807c1aaa34f0.html","relUrl":"notes/6f638e63-1ab9-478c-85ee-807c1aaa34f0.html"},{"doc":"Kotlin","title":"Kotlin","hpath":"lang.kotlin","content":"[[lang.kotlin.functions]]\n[[lang.kotlin.flow]]\n\n#### Data structures\n\n[[lang.kotlin.data]]\n\n","url":"http://localhost:8080/notes/5a0727a9-24e6-423b-bd74-71acf4ad9f7f.html","relUrl":"notes/5a0727a9-24e6-423b-bd74-71acf4ad9f7f.html"},{"doc":"Functions","title":"Functions","hpath":"lang.kotlin.functions","content":"\n#### Functions\n\n```kotlin\nfun double(x: Int): Int {\n    return 2 * x\n}\n```\n\n#### Lambdas\n**Higher Order Functions**\nA higher-order function is a function that takes functions as parameters, or returns a function.\n","url":"http://localhost:8080/notes/73ef224b-e730-4759-9ef9-8d21fbf458ab.html","relUrl":"notes/73ef224b-e730-4759-9ef9-8d21fbf458ab.html"},{"doc":"Flow Control","title":"Flow Control","hpath":"lang.kotlin.flow","content":"\n```kotlin\nif (booleanValIsTrue) {\n    show()\n} else {\n    hide()\n}\n````\n\n### When Statement\nKotlin when statement is the equivalent of a switch statment in other languages such as Java.\n\n```java\n// Java switch statement\nint num = 3\nswitch (num) {\n    case 1:\n        System.out.println(\"One\");\n        break;\n    case 2:\n        System.out.println(\"Two\");\n        break;\n    case 3:\n        System.out.println(\"Three\");\n        break;\n    default:\n        System.out.println(\"Number not found.\");\n}\n```\nOutput: `Three`\n\n```kotlin\n// Kotlin when statement\nval num = 3\nwhen (num) {\n    1 -> println(\"One\")\n    2 -> println(\"Two\")\n    3 -> println(\"Three\")\n    else -> println(\"Number not found\")\n}\n```\nOutput: `Three`","url":"http://localhost:8080/notes/8329be9a-ca86-4c4a-a0b3-bff7fda2410f.html","relUrl":"notes/8329be9a-ca86-4c4a-a0b3-bff7fda2410f.html"},{"doc":"Data","title":"Data","hpath":"lang.kotlin.data","content":"\n[[lang.kotlin.data.boolean]]\n[[lang.kotlin.data.string]]\n[[lang.kotlin.data.array]]","url":"http://localhost:8080/notes/89abab2e-b800-4f09-9ef0-e167ab62757d.html","relUrl":"notes/89abab2e-b800-4f09-9ef0-e167ab62757d.html"},{"doc":"Strings","title":"Strings","hpath":"lang.kotlin.data.string","content":"\nStrings in Kotlin are represented by the type `String`.\n```kotlin\nval str: String = \"abcd 123\"\n```\nElements of a string are characters that you can access via the indexing operation: `s[i]`.\n```kotlin\nfor (c in str) {\n    println(c)\n}\n```\n\n#### String literals\n\n#### String templates","url":"http://localhost:8080/notes/9a7215b5-cab5-4ab0-a39c-23a787cde56d.html","relUrl":"notes/9a7215b5-cab5-4ab0-a39c-23a787cde56d.html"},{"doc":"Boolean","title":"Boolean","hpath":"lang.kotlin.data.boolean","content":"\n# Boolean\n\nT/F","url":"http://localhost:8080/notes/90fee37d-fe39-46ff-9119-85d624c484e5.html","relUrl":"notes/90fee37d-fe39-46ff-9119-85d624c484e5.html"},{"doc":"Arrays","title":"Arrays","hpath":"lang.kotlin.data.array","content":"\nArrays in Kotlin are represented by the `Array` class.\n```kotlin\nval arr = arrayOf<Int>(1, 2, 3) // [1, 2, 3]\n```\n\n**Primitive Array's**\nKotlin also has classes that represent arrays of primitive types without boxing overhead: `ByteArray`, `ShortArray`, `IntArray`, and so on.\n\nThese classes have no inheritance relation to the `Array` class, but they have the same set of methods and properties. Each of them also has a corresponding factory function.\n```kotlin\nval x: IntArray = intArrayOf(1, 2, 3)\n```","url":"http://localhost:8080/notes/46c50cd1-8dcf-4bf3-9eea-20f7a129456f.html","relUrl":"notes/46c50cd1-8dcf-4bf3-9eea-20f7a129456f.html"},{"doc":"JavaScript","title":"JavaScript","hpath":"lang.javascript","content":"\n- [[lang.javascript.functions]]\n- [[lang.javascript.flow]]\n\n#### Data structures\n\n- [[lang.javascript.data]]\n\n##### Resources\nhttps://blog.angular-university.io/javascript-for-java-developers/\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference","url":"http://localhost:8080/notes/9b01ac44-d380-4406-928b-b64d84e67097.html","relUrl":"notes/9b01ac44-d380-4406-928b-b64d84e67097.html"},{"doc":"Data","title":"Data","hpath":"lang.javascript.data","content":"\n[[lang.javascript.data.boolean]]\n[[lang.javascript.data.string]]\n[[lang.javascript.data.array]]\n[[lang.javascript.data.object]]","url":"http://localhost:8080/notes/17017ea6-59c9-4841-a489-c02e337f7ee7.html","relUrl":"notes/17017ea6-59c9-4841-a489-c02e337f7ee7.html"},{"doc":"Objects","title":"Objects","hpath":"lang.javascript.data.object","content":"\n#### Javascript Objects\nAlthough Javascript is an OOP language, there are no classes. \n```javascript\nvar superhero = {};\n \nsuperhero.name = 'Superman';  \nsuperhero.strength = 100;\n```\n\nJavascript objects are just like a Java HashMap of related properties, where the keys are Strings only. This means that Javascript is a multi-level 'hash map' of key/value pairs.\n```java\n// equivalent Java code\nMap<String,Object> superhero = new HashMap<>();\n \nsuperhero.put(\"name\",\"Superman\");  \nsuperhero.put(\"strength\", 100);\n```\n\n#### 'this' keyword usage\n// add notes\n\n#### Classic vs Prototypal Inheritance\nIn Javascript, there is no class inheritance instead objects can inherit directly from other objects. Each object has an implicit property that points to another object. That property is called `__proto__`, and the parent object is called the object's prototype, hence the name Prototypal Inheritance.\n```javascript\nvar avengersHero = {  \n    editor: 'Marvel'\n};\n \nvar ironMan = {};\n \nironMan.__proto__ = avengersHero;\n \nconsole.log('Iron Man is copyrighted by ' + ironMan.editor);\n// output: Iron Man is copyrighted by Marvel\n```\n\n#### Closures vs lambdas\nJavascript closures are not that different from Java anonymous inner classes.\n```java\n// Java\n\npublic interface FlyCommand {  \n    public void fly();\n}\n \npublic class FlyingHero {\n \n    private String name;\n \n    public FlyingHero(String name) {\n        this.name = name;\n    }\n \n    public void fly(FlyCommand flyCommand) {\n        flyCommand.fly();\n    }\n}\n.\n.\n.\n// We can can pass it a fly command like this in Java 8\nString destination = \"Mars\";  \n// Notice the lambda had to 'remember' the variable [destination]\nsuperMan.fly(() -> System.out.println(\"Flying to \" +  destination ));\n```\nThis notion of a function that remembers about variables outside it's block scope for later use is called a **Closure** in Javascript.\n\nA Javascript closure looks like this:\n```javascript\nvar destination = 'Mars';\n \nvar fly = function() {  \n    console.log('Fly to ' + destination);\n}\n \nfly();\n```\n\n#### Functions\nFunctions in Javascript are just values of type `Function`.\n```javascript\nvar flyFunction = function() {  \n    console.log('Flying like a bird!');\n};\n \nsuperhero.fly = flyFunction;\n```\nThis creates a function (a value of type `Function`) and assigns it to a variable `flyFunction`. A new property named `fly` is then created in the `superhero` object, that can be invoked like this:\n```javascript\n// prints 'Flying like a bird!' to the console\nsuperhero.fly();\n```","url":"http://localhost:8080/notes/50285ae8-2138-460f-98b5-67bee36ff3e7.html","relUrl":"notes/50285ae8-2138-460f-98b5-67bee36ff3e7.html"},{"doc":"Bash","title":"Bash","hpath":"lang.bash","content":"\nCheat Sheet ref: https://gist.github.com/bradtraversy/ac3b1136fc7d739a788ad1e42a78b610\n\n----\n\nBash script file extension: `.sh`.\n\nMake file executable: `chmod +x file.sh`\n\nRun file: `./file.sh`\n\nWhere is bash: `which bash`\n\nPut bash location at top of file: `#! /bin/bash`\n\n####  ECHO COMMAND\n```bash\necho Hello World!\n```\n\n#### VARIABLES\nUppercase by convention\nLetters, numbers, underscores\n```bash\nNAME=\"Jon\"\necho \"My name is $NAME\"\n# or\necho \"My name is ${NAME}\"\n```\n\n#### USER INPUT\n```bash\nNAME=\"Jon\"\nread -p \"Enter your name: \" NAME\necho \"Hello $NAME, nice to meet you!\"\n```\n\n #### SIMPLE IF STATEMENT\n```bash\nNAME=\"Jon\"\nif [ \"$NAME\" == \"Jon\" ]\nthen\n    echo \"Your name is $Jon\"\nfi\n```\n\n#### IF-ELSE\n```bash\nNAME=\"Jack\"\nif [ \"$NAME\" == \"Jon\" ]\nthen\n    echo \"Your name is Jon\"\nelse\n    echo \"Your name is not Jon\"\nfi\n```\n\n#### ELSE-IF (elif)\n```bash\nNAME=\"Jack\"\nif [ \"$NAME\" == \"Jon\" ]\nthen\n    echo \"Your name is Jon\"\nelif [ \"$NAME\" == \"Jack\" ]\nthen\n    echo \"Your name is Jack\"\nelse\n    echo \"Your name is not Jon or Jack\"\nfi\n```\n\n#### COMPARISON\n`FOO -eq BAR` returns true if the values are equal\n`FOO -ne BAR` returns true if the values not equal\n`FOO -gt BAR` returns true if `FOO` is greater than `BAR`\n`FOO -ge BAR` returns true if `FOO` is greater than or equal to `BAR`\n`FOO -lt BAR` returns true if `FOO` is less than `BAR`\n`FOO -le BAR` returns true if `FOO` is less than or equal to `BAR`\n```bash\nFOO=1\nBAR=2\nif [ \"$FOO\" == \"$BAR\" ]\nthen\n    echo \"$FOO is greater than $BAR\"\nelse\n    echo \"$FOO is less than $BAR\"\nfi\n```\n\n#### FILE CONDITIONS\n`-d` file   True if the file is a directory\n`-e` file   True if the file exists (note that this is not particularly portable, thus `-f` is generally used)\n`-f` file   True if the provided string is a file\n`-g` file   True if the group id is set on a file\n`-r` file   True if the file is readable\n`-s` file   True if the file has a non-zero size\n`-u`    True if the user id is set on a file\n`-w`    True if the file is writable\n`-x`    True if the file is an executable\n```bash\nFILE=\"test.txt\"\nif [ -e \"$FILE\" ]\nthen\n  echo \"$FILE exists\"\nelse\n  echo \"$FILE does NOT exist\"\nfi\n```","url":"http://localhost:8080/notes/140f486f-2ad7-42c3-bc52-d051f14715ac.html","relUrl":"notes/140f486f-2ad7-42c3-bc52-d051f14715ac.html"},{"doc":"Keyboard Shortcuts","title":"Keyboard Shortcuts","hpath":"keyboard-shortcuts","content":"\nTake screenshot and copy to clipboard (Mac)\n`shift + control + command + 4`\n\n- [[VS Code|keyboard-shortcuts.vs-code]]","url":"http://localhost:8080/notes/5d6232e0-8da6-4ebd-a14f-07df8c960188.html","relUrl":"notes/5d6232e0-8da6-4ebd-a14f-07df8c960188.html"},{"doc":"Vs Code","title":"Vs Code","hpath":"keyboard-shortcuts.vs-code","content":"\nOpen terminal on VSCode\n`shift + control + back-ticker`\n\nTrigger IntelliSense in VSCode\n`control + space `","url":"http://localhost:8080/notes/fcf48162-5a4f-4ab8-88e4-7e6db82db40a.html","relUrl":"notes/fcf48162-5a4f-4ab8-88e4-7e6db82db40a.html"},{"doc":"CI/CD","title":"CI/CD","hpath":"ci-cd","content":"\n**What is CI & CD?**\nContinuous integration (CI) is the practice, in software engineering, of merging all developer working copies ot a shared mainline several times a day.\n\nContinuous delivery (CD) is a software enginerring approach in which teams produce software in short cycles, ensuring that the software can be reliably released at any time. It aims at building, testing, and releasing software faster and more frequently.\n\n\\- Wikipedia\n\n**Benefits?**\nOne of the key driving forces behind CI and CD is to detect problems or bugs as early as possible in the development lifecycle. The faster feedback loop inevitably results in better quality software since the builds are automated and the source is integrated and continuously built and deployed.\n\nKey take-aways:\n- Reduced risk\n- Increased confidence\n- Better quality code\n- Ready to ship code\n- Systematic versioning\n- Code quality trend analysis\n- Time to market\n- Reduced cost\n\n**Frameworks**\n- [[Jenkins|ci-cd.jenkins]]","url":"http://localhost:8080/notes/658350f3-605b-400e-9787-6c472b3ebf92.html","relUrl":"notes/658350f3-605b-400e-9787-6c472b3ebf92.html"},{"doc":"Jenkins","title":"Jenkins","hpath":"ci-cd.jenkins","content":"\n**Jenkins**\n- Low-cost open source solution\n- Huge and active community with thousands of plug-ins\n- Extendable with the ability to create your own plug-ins","url":"http://localhost:8080/notes/aa63b651-083a-4e82-9406-fd0b40a5894d.html","relUrl":"notes/aa63b651-083a-4e82-9406-fd0b40a5894d.html"},{"doc":"Changelog","title":"Changelog","hpath":"root.changelog","content":"","url":"http://localhost:8080/notes/changelog.html","relUrl":"notes/changelog.html"}]
